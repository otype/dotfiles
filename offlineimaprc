[general]
ui = ttyui
accounts = hansotypede, hansschmidtmeltwatercom, hgschmidtposteode
pythonfile=~/.mutt/get_credentials.py
maxsyncaccounts = 3

# hans@otype.de
#
#
[Account hansotypede]
localrepository = hansotypede-local
remoterepository = hansotypede-remote
status_backend = sqlite

[Repository hansotypede-local]
type = Maildir
localfolders = ~/Mail/hansotypede
#nametrans = lambda folder: {'drafts':   '[Gmail]/Drafts',
#                            'sent':     '[Gmail]/Sent Mail',
#                            'flagged':  '[Gmail]/Starred',
#                            'important':'[Gmail]/Important',
#                            'trash':    '[Gmail]/Trash',
#                            'spam':     '[Gmail]/Spam',
#                            'archive':  '[Gmail]/All Mail',
#                           }.get(folder, folder)

[Repository hansotypede-remote]
type = Gmail
ssl = yes
maxconnections = 1
realdelete = no
cert_fingerprint=89091347184d41768bfc0da9fad94bfe882dd358
remoteuser = hans@otype.de
remotepasseval = get_password_for(account="hans@otype.de", server="imap.gmail.com")
#nametrans = lambda folder: {'[Gmail]/Drafts':    'drafts',
#                            '[Gmail]/Sent Mail': 'sent',
#                            '[Gmail]/Starred':   'flagged',
#                            '[Gmail]/Important': 'important',
#                            '[Gmail]/Trash':     'trash',
#                            '[Gmail]/Spam':      'spam',
#                            '[Gmail]/All Mail':  'archive',
#                           }.get(folder, folder)
#folderfilter = lambda folder: folder not in ['[Gmail]/Chats',
#                                             ]

# hans.schmidt@meltwater.com
#
#
[Account hansschmidtmeltwatercom]
localrepository = hansschmidtmeltwatercom-Local
remoterepository = hansschmidtmeltwatercom-Remote
status_backend = sqlite

[Repository hansschmidtmeltwatercom-Local]
type = Maildir
localfolders = ~/Mail/hansschmidtmeltwatercom
#nametrans = lambda folder: {'drafts':   '[Gmail]/Drafts',
#                            'sent':     '[Gmail]/Sent Mail',
#                            'flagged':  '[Gmail]/Starred',
#                            'important':'[Gmail]/Important',
#                            'trash':    '[Gmail]/Trash',
#                            'spam':     '[Gmail]/Spam',
#                            'archive':  '[Gmail]/All Mail',
#                           }.get(folder, folder)

[Repository hansschmidtmeltwatercom-Remote]
type = Gmail
ssl = yes
maxconnections = 1
realdelete = no
cert_fingerprint=89091347184d41768bfc0da9fad94bfe882dd358
remoteuser = hans.schmidt@meltwater.com
remotepasseval = get_password_for(account="hans.schmidt@meltwater.com", server="imap.googlemail.com")
#nametrans = lambda folder: {'[Gmail]/Drafts':    'drafts',
#                            '[Gmail]/Sent Mail': 'sent',
#                            '[Gmail]/Starred':   'flagged',
#                            '[Gmail]/Important': 'important',
#                            '[Gmail]/Trash':     'trash',
#                            '[Gmail]/Spam':      'spam',
#                            '[Gmail]/All Mail':  'archive',
#                           }.get(folder, folder)
#folderfilter = lambda folder: folder not in ['[Gmail]/Chats',
#                                             ]

# hgschmidt@posteo.de
#
#
[Account hgschmidtposteode]
localrepository = hgschmidtposteode-local
remoterepository = hgschmidtposteode-remote
status_backend = sqlite

[Repository hgschmidtposteode-local]
type = Maildir
localfolders = ~/Mail/hgschmidtposteode

[Repository hgschmidtposteode-remote]
type = IMAP
ssl = yes
maxconnections = 1
cert_fingerprint=6324a14b7f50efa15915975f230f33d3e4bd4231
remoteuser = hgschmidt@posteo.de
remotehost = posteo.de
remotepasseval = get_password_for(account="hgschmidt@posteo.de", server="posteo.de")
